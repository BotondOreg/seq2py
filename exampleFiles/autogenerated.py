# autogenerated from p5sMagtrap2022-08-24.yaml
start()
t = 0
###############################################################################################
# Initialize
# digital outputs
keithley_ext_trigger.go_low(t=t)
y_high_field_imaging_flipper.go_low(t=t)
k_slower_field.go_low(t=t)
sg_ttl.go_low(t=t)
bz_on_digital.go_high(t=t)
fb_lock.go_low(t=t)
fb_agilent_triqger.go_low(t=t)
igbt_mag_trap_ttl.go_low(t=t)
igbt_fb_ttl.go_low(t=t)
mag_trap_relay.go_high(t=t)
x_bias_on.go_high(t=t)
igbt_mot_ttl.go_low(t=t)
by_on.go_low(t=t)
na_slower_field.go_low(t=t)
fb_coils_relay.go_low(t=t)
ipg.go_low(t=t)
podt.go_low(t=t)
ir_envelope_trigger.go_low(t=t)
podt_aom.go_low(t=t)
k_imaging_y_shutter.go_low(t=t)
k40_high_field_img.go_low(t=t)
k40_slower_mot.go_low(t=t)
k40_repump_shutter.go_low(t=t)
k40_mot_shutter.go_low(t=t)
k_imaging_z_shutter.go_low(t=t)
k40_slower_repump.go_low(t=t)
k_slower_shutter.go_low(t=t)
k_tandem_aom_switch.go_low(t=t)
k_high_img_aom_switch.go_low(t=t)
mystery_na_slower_shutter_aom_eom.go_low(t=t)
na_tandem_ttl.go_low(t=t)
na_y_img_shutter.go_low(t=t)
na_f2_img_aom_ttl.go_low(t=t)
na_mot_shutter.go_low(t=t)
na_repump_ttl.go_low(t=t)
na_f1_img_aom_ttl.go_low(t=t)
na_repumper_shutter.go_high(t=t)
na_brimrose_shutter.go_high(t=t)
na_mot_ttl.go_high(t=t)
na_z_imaging_shutter.go_low(t=t)
tisa_dither_off.go_low(t=t)
tisa_shutter.go_low(t=t)
tisa_aom_ttl.go_low(t=t)
y_cam_trigger.go_low(t=t)
zcam_shutter.go_low(t=t)
z_cam_trigger.go_low(t=t)
dye_laser_shutter.go_low(t=t)
dye_laser_aom_ttl.go_low(t=t)
na_atom_shutter.go_low(t=t)
k_atom_shutter.go_low(t=t)
top_mot_flipper.go_high(t=t)
scope_trigger.go_low(t=t)
plug_shutter.go_high(t=t)
microwave_rs_upleg.go_low(t=t)
microwave_to_rf_relay.go_low(t=t)
microwave_amplifier_24VDC_power.go_low(t=t)
rf2_fast_switch.go_low(t=t)
rf1_rf2_amplifier_dc_power.go_low(t=t)
rf1_fast_switch.go_low(t=t)
rf1_to_rf2_relay.go_low(t=t)
microwave_lxi_downleg.go_low(t=t)
rf1_fast_switch_new.go_low(t=t)
hv_on_off.go_low(t=t)
hyperfine_agilent_2.go_low(t=t)
# analog outputs
mag_trap.constant(t=t, value=-0.1)
k_tandem_power.constant(t=t, value=1)
k_tandem_freq.constant(t=t, value=7.48)
atom_shutter_ctrl.constant(t=t, value=0)
na_mot_freq.constant(t=t, value=0.45)
k40_slower_mot_power.constant(t=t, value=3)
k40_slower_rep_power.constant(t=t, value=3)
tisa_slow_pzt.constant(t=t, value=6.2)
k2switchbtwlowandhighfield_rf.constant(t=t, value=4.5)
k40_repumper_freq.constant(t=t, value=5.25)
k40_slower_mot_freq.constant(t=t, value=3)
k40_slower_rep_freq.constant(t=t, value=3.2)
by_off.constant(t=t, value=1.2)
bx_on.constant(t=t, value=0)
bz_on.constant(t=t, value=0.7)
k40_mot_frequency.constant(t=t, value=7.25)
k41_mot_slower_power.constant(t=t, value=4)
na_repumper_freq.constant(t=t, value=0)
k_high_field_aom_power.constant(t=t, value=4)
k41_mot_freq.constant(t=t, value=6.036419411479372)
k41_repump_freq.constant(t=t, value=2.1011856703999854)
fb_cv.constant(t=t, value=2.5)
li_tandem_freq.constant(t=t, value=0)
mot_fluo_trig_level.constant(t=t, value=3.5)
unused.constant(t=t, value=0)
by_coil.constant(t=t, value=0)
hv_top_control.constant(t=t, value=2.8)
hv_bottom_control.constant(t=t, value=4.6)
agilent_mxg_fm.constant(t=t, value=5.9)
sg_igbt_ttl.constant(t=t, value=0)
by_grad_igbt_ttl.constant(t=t, value=0)
mot_coil.constant(t=t, value=-0.1)
k40_repumper_ta_power.constant(t=t, value=6)
k40_mot_ta_power.constant(t=t, value=6)
na_tandem_freq.constant(t=t, value=6.45)
na_repump_aom_pow.constant(t=t, value=3.5)
codt_16bit.constant(t=t, value=0)
podt_16bit.constant(t=t, value=0)
raise ValueError('Analog channel na_mot_freq is derived from a formula.')
raise ValueError('Analog channel k41_mot_freq is derived from a formula.')
raise ValueError('Analog channel k41_repump_freq is derived from a formula.')
raise ValueError('Analog channel fb_cv is derived from a formula.')
raise ValueError('Analog channel hv_top_control is derived from a formula.')
raise ValueError('Analog channel agilent_mxg_fm is derived from a formula.')
t += 0.003
###############################################################################################
# Start open shutter
# digital outputs
k_slower_field.go_high(t=t)
igbt_mot_ttl.go_high(t=t)
na_slower_field.go_high(t=t)
na_repump_ttl.go_high(t=t)
na_atom_shutter.go_high(t=t)
# analog outputs
mag_trap.constant(t=t, value=8)
na_mot_freq.constant(t=t, value=0.475)
by_off.constant(t=t, value=1.2)
bx_on.constant(t=t, value=0)
bz_on.constant(t=t, value=0.7)
mot_coil.constant(t=t, value=0.18)
na_f1_img_aom_pow.constant(t=t, value=8)
na_mot_aom_pow.constant(t=t, value=0.6)
na_repump_aom_pow.constant(t=t, value=3)
raise ValueError('Analog channel atom_shutter_ctrl has a waveform.')
#(('0 s', '0 V'), ('0.5 s', '7.5 V'))
t += 0.5
###############################################################################################
# load Na
# digital outputs
mystery_na_slower_shutter_aom_eom.go_high(t=t)
na_tandem_ttl.go_high(t=t)
na_mot_shutter.go_high(t=t)
t += 0.5
###############################################################################################
# close shutter Na
# digital outputs
# analog outputs
raise ValueError('Analog channel atom_shutter_ctrl has a waveform.')
#(('0 s', '7.5 V'), ('0.5 s', '0 V'))
t += 0.5
###############################################################################################
# Slower Off
# digital outputs
k_slower_field.go_low(t=t)
na_slower_field.go_low(t=t)
mystery_na_slower_shutter_aom_eom.go_low(t=t)
na_tandem_ttl.go_low(t=t)
na_atom_shutter.go_low(t=t)
t += 0.04
###############################################################################################
# Bias field on
# digital outputs
igbt_mot_ttl.go_low(t=t)
by_on.go_high(t=t)
na_y_img_shutter.go_high(t=t)
raise ValueError('Channel na_y_img_shutter has a pulse.')
na_mot_shutter.go_low(t=t)
na_repump_ttl.go_low(t=t)
na_repumper_shutter.go_low(t=t)
na_mot_ttl.go_low(t=t)
# analog outputs
by_off.constant(t=t, value=1.2)
bx_on.constant(t=t, value=0)
bz_on.constant(t=t, value=0)
na_f2_img_aom_freq.constant(t=t, value=-0.35)
na_f1_img_aom_pow.constant(t=t, value=5)
na_tandem_freq.constant(t=t, value=4.73)
na_f2_im_pow.constant(t=t, value=-0.25)
t += 0.0003
###############################################################################################
# Na optical Pumping
# digital outputs
na_tandem_ttl.go_high(t=t)
na_f2_img_aom_ttl.go_high(t=t)
na_f1_img_aom_ttl.go_high(t=t)
t += 0.0004
###############################################################################################
# Na Magtrap catch
# digital outputs
igbt_mag_trap_ttl.go_high(t=t)
by_on.go_low(t=t)
na_y_img_shutter.go_low(t=t)
na_f2_img_aom_ttl.go_low(t=t)
scope_trigger.go_high(t=t)
# analog outputs
mag_trap.constant(t=t, value=3.8)
t += 0.02
###############################################################################################
# Cleanup  probe atom
# digital outputs
na_tandem_ttl.go_low(t=t)
na_f1_img_aom_ttl.go_low(t=t)
na_brimrose_shutter.go_low(t=t)
y_cam_trigger.go_high(t=t)
scope_trigger.go_low(t=t)
t += 3.9999999999999996e-05
###############################################################################################
# 40K Magtrap Catch w/ Pump
# digital outputs
y_cam_trigger.go_low(t=t)
# analog outputs
mot_coil.constant(t=t, value=-1)
t += 0.7
###############################################################################################
# Imaging
# digital outputs
ipg.go_high(t=t)
podt.go_high(t=t)
k_imaging_z_shutter.go_high(t=t)
na_y_img_shutter.go_high(t=t)
na_brimrose_shutter.go_high(t=t)
raise ValueError('Channel na_brimrose_shutter has a pulse.')
plug_shutter.go_low(t=t)
# analog outputs
k_tandem_power.constant(t=t, value=1.2)
k_tandem_freq.constant(t=t, value=7.59644)
k40_slower_mot_power.constant(t=t, value=2.8)
k40_slower_rep_power.constant(t=t, value=2.5)
k40_slower_mot_freq.constant(t=t, value=3.8)
k41_mot_slower_power.constant(t=t, value=0)
k_high_field_aom_power.constant(t=t, value=2.5)
k41_mot_freq.constant(t=t, value=6)
k41_repump_freq.constant(t=t, value=2.1011856703999854)
mot_fluo_trig_level.constant(t=t, value=10)
hv_top_control.constant(t=t, value=2.2)
hv_bottom_control.constant(t=t, value=4.6)
agilent_mxg_fm.constant(t=t, value=5.9)
na_f2_img_aom_freq.constant(t=t, value=0.36)
na_f1_img_aom_pow.constant(t=t, value=6)
na_tandem_freq.constant(t=t, value=4.84)
na_f2_im_pow.constant(t=t, value=-0.2)
na_repump_aom_pow.constant(t=t, value=8)
raise ValueError('Analog channel k_tandem_freq is derived from a formula.')
raise ValueError('Analog channel k41_mot_freq is derived from a formula.')
raise ValueError('Analog channel k41_repump_freq is derived from a formula.')
t += 0.01
###############################################################################################
# TOF
# digital outputs
igbt_mag_trap_ttl.go_low(t=t)
ipg.go_low(t=t)
podt.go_low(t=t)
# analog outputs
by_off.constant(t=t, value=10)
bx_on.constant(t=t, value=0)
bz_on.constant(t=t, value=0)
t += 1e-05
###############################################################################################
# Na probe atom
# digital outputs
na_f2_img_aom_ttl.go_high(t=t)
y_cam_trigger.go_high(t=t)
t += 3.9999999999999996e-05
###############################################################################################
# Copy of wait time1
# digital outputs
na_f2_img_aom_ttl.go_low(t=t)
y_cam_trigger.go_low(t=t)
t += 0.1
###############################################################################################
# wait time2
# digital outputs
t += 0.2
###############################################################################################
# Copy of wait time2
# digital outputs
ipg.go_high(t=t)
podt.go_high(t=t)
t += 0.2
###############################################################################################
# wait time3
# digital outputs
ipg.go_low(t=t)
podt.go_low(t=t)
t += 1e-05
###############################################################################################
# Na probe no atom
# digital outputs
na_f2_img_aom_ttl.go_high(t=t)
y_cam_trigger.go_high(t=t)
t += 3.9999999999999996e-05
###############################################################################################
# waith time 1
# digital outputs
na_f2_img_aom_ttl.go_low(t=t)
y_cam_trigger.go_low(t=t)
t += 0.1
###############################################################################################
# wait time 2
# digital outputs
t += 0.2
###############################################################################################
# Copy of wait time 2
# digital outputs
ipg.go_high(t=t)
podt.go_high(t=t)
t += 0.2
###############################################################################################
# wait time 3
# digital outputs
ipg.go_low(t=t)
podt.go_low(t=t)
t += 1e-05
###############################################################################################
# Na Bg image
# digital outputs
y_cam_trigger.go_high(t=t)
t += 3.9999999999999996e-05
###############################################################################################
# Copy of Copy of wait time 3
# digital outputs
y_cam_trigger.go_low(t=t)
t += 0.005
###############################################################################################
# Initialize
# digital outputs
keithley_ext_trigger.go_low(t=t)
y_high_field_imaging_flipper.go_low(t=t)
k_slower_field.go_low(t=t)
sg_ttl.go_low(t=t)
bz_on_digital.go_high(t=t)
fb_lock.go_low(t=t)
fb_agilent_triqger.go_low(t=t)
igbt_mag_trap_ttl.go_low(t=t)
igbt_fb_ttl.go_low(t=t)
mag_trap_relay.go_high(t=t)
x_bias_on.go_high(t=t)
igbt_mot_ttl.go_low(t=t)
by_on.go_low(t=t)
na_slower_field.go_low(t=t)
fb_coils_relay.go_low(t=t)
ipg.go_low(t=t)
podt.go_low(t=t)
ir_envelope_trigger.go_low(t=t)
podt_aom.go_low(t=t)
k_imaging_y_shutter.go_low(t=t)
k40_high_field_img.go_low(t=t)
k40_slower_mot.go_low(t=t)
k40_repump_shutter.go_low(t=t)
k40_mot_shutter.go_low(t=t)
k_imaging_z_shutter.go_low(t=t)
k40_slower_repump.go_low(t=t)
k_slower_shutter.go_low(t=t)
k_tandem_aom_switch.go_low(t=t)
k_high_img_aom_switch.go_low(t=t)
mystery_na_slower_shutter_aom_eom.go_low(t=t)
na_tandem_ttl.go_low(t=t)
na_y_img_shutter.go_low(t=t)
na_f2_img_aom_ttl.go_low(t=t)
na_mot_shutter.go_low(t=t)
na_repump_ttl.go_low(t=t)
na_f1_img_aom_ttl.go_low(t=t)
na_repumper_shutter.go_high(t=t)
na_brimrose_shutter.go_high(t=t)
na_mot_ttl.go_high(t=t)
na_z_imaging_shutter.go_low(t=t)
tisa_dither_off.go_low(t=t)
tisa_shutter.go_low(t=t)
tisa_aom_ttl.go_low(t=t)
y_cam_trigger.go_low(t=t)
zcam_shutter.go_low(t=t)
z_cam_trigger.go_low(t=t)
dye_laser_shutter.go_low(t=t)
dye_laser_aom_ttl.go_low(t=t)
na_atom_shutter.go_low(t=t)
k_atom_shutter.go_low(t=t)
top_mot_flipper.go_high(t=t)
scope_trigger.go_low(t=t)
plug_shutter.go_high(t=t)
microwave_rs_upleg.go_low(t=t)
microwave_to_rf_relay.go_low(t=t)
microwave_amplifier_24VDC_power.go_low(t=t)
rf2_fast_switch.go_low(t=t)
rf1_rf2_amplifier_dc_power.go_low(t=t)
rf1_fast_switch.go_low(t=t)
rf1_to_rf2_relay.go_low(t=t)
microwave_lxi_downleg.go_low(t=t)
rf1_fast_switch_new.go_low(t=t)
hv_on_off.go_low(t=t)
hyperfine_agilent_2.go_low(t=t)
# analog outputs
mag_trap.constant(t=t, value=-0.1)
k_tandem_power.constant(t=t, value=1)
k_tandem_freq.constant(t=t, value=7.48)
atom_shutter_ctrl.constant(t=t, value=0)
na_mot_freq.constant(t=t, value=0.45)
k40_slower_mot_power.constant(t=t, value=3)
k40_slower_rep_power.constant(t=t, value=3)
tisa_slow_pzt.constant(t=t, value=6.2)
k2switchbtwlowandhighfield_rf.constant(t=t, value=4.5)
k40_repumper_freq.constant(t=t, value=5.25)
k40_slower_mot_freq.constant(t=t, value=3)
k40_slower_rep_freq.constant(t=t, value=3.2)
by_off.constant(t=t, value=1.2)
bx_on.constant(t=t, value=0)
bz_on.constant(t=t, value=0.7)
k40_mot_frequency.constant(t=t, value=7.25)
k41_mot_slower_power.constant(t=t, value=4)
na_repumper_freq.constant(t=t, value=0)
k_high_field_aom_power.constant(t=t, value=4)
k41_mot_freq.constant(t=t, value=6.036419411479372)
k41_repump_freq.constant(t=t, value=2.1011856703999854)
fb_cv.constant(t=t, value=2.5)
li_tandem_freq.constant(t=t, value=0)
mot_fluo_trig_level.constant(t=t, value=3.5)
unused.constant(t=t, value=0)
by_coil.constant(t=t, value=0)
hv_top_control.constant(t=t, value=2.8)
hv_bottom_control.constant(t=t, value=4.6)
agilent_mxg_fm.constant(t=t, value=5.9)
sg_igbt_ttl.constant(t=t, value=0)
by_grad_igbt_ttl.constant(t=t, value=0)
mot_coil.constant(t=t, value=-0.1)
k40_repumper_ta_power.constant(t=t, value=6)
k40_mot_ta_power.constant(t=t, value=6)
na_tandem_freq.constant(t=t, value=6.45)
na_repump_aom_pow.constant(t=t, value=3.5)
codt_16bit.constant(t=t, value=0)
podt_16bit.constant(t=t, value=0)
raise ValueError('Analog channel na_mot_freq is derived from a formula.')
raise ValueError('Analog channel k41_mot_freq is derived from a formula.')
raise ValueError('Analog channel k41_repump_freq is derived from a formula.')
raise ValueError('Analog channel fb_cv is derived from a formula.')
raise ValueError('Analog channel hv_top_control is derived from a formula.')
raise ValueError('Analog channel agilent_mxg_fm is derived from a formula.')
t += 0.003
stop(t=t)
